import 'onsenui/esm/elements/ons-splitter-side.js';
import { hasOptions, deriveEvents } from '../mixins/index.js';
import { openBlock, createElementBlock, renderSlot } from 'vue';

const name = 'v-ons-splitter-side';

  var script = {
    name,
    mixins: [hasOptions, deriveEvents(name)],

    emits: ['update:open'],

    props: {
      open: {
        type: Boolean,
        default: undefined
      }
    },

    methods: {
      action() {
        this._shouldUpdate() && this.$el[this.open ? 'open' : 'close'].call(this.$el, this.options).catch(() => {});
      },
      _shouldUpdate() {
        return this.open !== undefined && this.open !== this.$el.isOpen;
      }
    },

    watch: {
      open() {
        this.action();
      }
    },

    mounted() {
      this._updateOpenHandler = () => this._shouldUpdate() && this.$emit('update:open', this.$el.isOpen);

      ['postopen', 'postclose', 'modechange']
        .forEach(event => this.$el.addEventListener(event, this._updateOpenHandler));

      this.action();
    },

    beforeDestroy() {
      ['postopen', 'postclose', 'modechange']
        .forEach(event => this.$el.removeEventListener(event, this._updateOpenHandler));
    }
  };

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createElementBlock("ons-splitter-side", null, [
    renderSlot(_ctx.$slots, "default")
  ]))
}

script.render = render;

export { script as default };
