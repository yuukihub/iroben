import 'onsenui/esm/elements/ons-select.js';
import { modifier } from '../mixins/index.js';
import { openBlock, createElementBlock, withDirectives, createElementVNode, renderSlot, vModelSelect } from 'vue';

var script = {
    name: 'v-ons-select',
    mixins: [modifier],
    emits: ['update:modelValue'],
    props: {
      modelValue: [Number, String]
    },
    computed: {
      selectedValue: {
        get() {
          return this.modelValue;
        },
        set(val) {
          this.$emit('update:modelValue', val);
        }
      }
    }
  };

const _hoisted_1 = ["modifier"];

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createElementBlock("ons-select", { modifier: _ctx.normalizedModifier }, [
    withDirectives(createElementVNode("select", {
      "onUpdate:modelValue": _cache[0] || (_cache[0] = $event => (($options.selectedValue) = $event))
    }, [
      renderSlot(_ctx.$slots, "default")
    ], 512), [
      [vModelSelect, $options.selectedValue]
    ])
  ], 8, _hoisted_1))
}

script.render = render;

export { script as default };
