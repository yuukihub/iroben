import 'onsenui/esm/elements/ons-alert-dialog.js';
import { hasOptions, dialog, deriveEvents, deriveDBB, portal, modifier } from '../mixins/index.js';
import { openBlock, createElementBlock, mergeProps, createElementVNode, renderSlot, createTextVNode, toDisplayString, Fragment, renderList } from 'vue';

const name = 'v-ons-alert-dialog';

  var script = {
    name,
    mixins: [hasOptions, dialog, deriveEvents(name), deriveDBB, portal, modifier],

    props: {
      title: {
        type: String
      },
      footer: {
        type: Object,
        validator(value) {
          return Object.keys(value).every(key => value[key] instanceof Function);
        }
      }
    }
  };

const _hoisted_1 = ["modifier"];
const _hoisted_2 = { class: "alert-dialog-title" };
const _hoisted_3 = { class: "alert-dialog-content" };
const _hoisted_4 = { class: "alert-dialog-footer" };
const _hoisted_5 = ["onClick"];

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return (openBlock(), createElementBlock("ons-alert-dialog", mergeProps({ modifier: _ctx.normalizedModifier }, _ctx.orderedProps), [
    createElementVNode("div", _hoisted_2, [
      renderSlot(_ctx.$slots, "title", {}, () => [
        createTextVNode(toDisplayString($props.title), 1)
      ])
    ]),
    createElementVNode("div", _hoisted_3, [
      renderSlot(_ctx.$slots, "default")
    ]),
    createElementVNode("div", _hoisted_4, [
      renderSlot(_ctx.$slots, "footer", {}, () => [
        (openBlock(true), createElementBlock(Fragment, null, renderList($props.footer, (handler, key) => {
          return (openBlock(), createElementBlock("ons-alert-dialog-button", {
            key: key,
            onClick: handler
          }, toDisplayString(key), 9, _hoisted_5))
        }), 128))
      ])
    ])
  ], 16, _hoisted_1))
}

script.render = render;

export { script as default };
